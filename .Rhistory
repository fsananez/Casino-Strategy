c("Green",rep(c("Red","Black"),18)))
colnames(rouleta) <- c("Actual","Color")
sitting <- function(playlimit) ## strategy
{
betsize <- 1
profit <- 0
n_spin <- 0
while(profit < 1)
{
outcome <- sample(1:37,1,replace = TRUE)
number <- as.integer(rouleta$Actual[outcome])
color <- toString(rouleta$Color[outcome])
if(color == "Red")
{
profit <- profit + betsize
if(profit < 1)
{
betsize <- ifelse(profit + betsize + 1 > 1, 1 - profit, betsize + 1)
}
}
else
{
profit <- profit - betsize
betsize <- betsize + 1
}
n_spin <- n_spin + 1
if((n_spin >= playlimit)||(profit <= -20)||(profit == 0)) ## If the number of spins is greater than your limit break and accept your loss. If profit is 0 reset the round as this can mean you just sat down to start playing
{
return(profit)
}
}
return(profit)
}
n_sim <- 1000000
profit_sim <- rep(NA,n_sim)
# min_loss <- FALSE
# recover_spin <- 0
# test <- rep(NA,n_sim)
for(i in 1:n_sim)
{
profit_sim[i]<- sitting(25)
# if(min_loss && recover_spin > 0)
# {
#   recover_spin <- recover_spin - 1
#   test[i] <- profit_sim[i]
# }
#
# if(profit_sim[i] <= -20)
# {
#   min_loss <- TRUE
#   recover_spin <- 5
#   test[i] <- profit_sim[i]
# }
#
# if(recover_spin == 0)
# {
#   min_loss <- FALSE
# }
}
aux <- table(profit_sim)
hist(profit_sim)
summary(profit_sim)
table(ifelse(profit_sim > 0, 1, ifelse(profit_sim == 0, 0,-1)))/100
table(ifelse(profit_sim > 0, 1, ifelse(profit_sim == 0, 0,-1)))/10000
rouleta <- data.frame(c(0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26),
c("Green",rep(c("Red","Black"),18)))
colnames(rouleta) <- c("Actual","Color")
sitting <- function(playlimit) ## strategy
{
betsize <- 1
profit <- 0
n_spin <- 0
while(profit < 1)
{
outcome <- sample(1:37,1,replace = TRUE)
number <- as.integer(rouleta$Actual[outcome])
color <- toString(rouleta$Color[outcome])
if(color == "Red")
{
profit <- profit + betsize
if(profit < 1)
{
betsize <- ifelse(profit + betsize + 1 > 1, 1 - profit, betsize + 1)
}
}
else
{
profit <- profit - betsize
betsize <- betsize + 1
}
n_spin <- n_spin + 1
if((n_spin >= playlimit)||(profit <= -15)||(profit == 0)) ## If the number of spins is greater than your limit break and accept your loss. If profit is 0 reset the round as this can mean you just sat down to start playing
{
return(profit)
}
}
return(profit)
}
n_sim <- 1000000
profit_sim <- rep(NA,n_sim)
# min_loss <- FALSE
# recover_spin <- 0
# test <- rep(NA,n_sim)
for(i in 1:n_sim)
{
profit_sim[i]<- sitting(25)
# if(min_loss && recover_spin > 0)
# {
#   recover_spin <- recover_spin - 1
#   test[i] <- profit_sim[i]
# }
#
# if(profit_sim[i] <= -20)
# {
#   min_loss <- TRUE
#   recover_spin <- 5
#   test[i] <- profit_sim[i]
# }
#
# if(recover_spin == 0)
# {
#   min_loss <- FALSE
# }
}
aux <- table(profit_sim)
hist(profit_sim)
summary(profit_sim)
table(ifelse(profit_sim > 0, 1, ifelse(profit_sim == 0, 0,-1)))/10000
rouleta <- data.frame(c(0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26),
c("Green",rep(c("Red","Black"),18)))
colnames(rouleta) <- c("Actual","Color")
sitting <- function(playlimit) ## strategy
{
betsize <- 1
profit <- 0
n_spin <- 0
while(profit < 1)
{
outcome <- sample(1:37,1,replace = TRUE)
number <- as.integer(rouleta$Actual[outcome])
color <- toString(rouleta$Color[outcome])
if(color == "Red")
{
profit <- profit + betsize
if(profit < 1)
{
betsize <- ifelse(profit + betsize + 1 > 1, 1 - profit, betsize + 1)
}
}
else
{
profit <- profit - betsize
betsize <- betsize + 1
}
n_spin <- n_spin + 1
if((n_spin >= playlimit)||(profit <= -10)||(profit == 0)) ## If the number of spins is greater than your limit break and accept your loss. If profit is 0 reset the round as this can mean you just sat down to start playing
{
return(profit)
}
}
return(profit)
}
n_sim <- 1000000
profit_sim <- rep(NA,n_sim)
# min_loss <- FALSE
# recover_spin <- 0
# test <- rep(NA,n_sim)
for(i in 1:n_sim)
{
profit_sim[i]<- sitting(25)
# if(min_loss && recover_spin > 0)
# {
#   recover_spin <- recover_spin - 1
#   test[i] <- profit_sim[i]
# }
#
# if(profit_sim[i] <= -20)
# {
#   min_loss <- TRUE
#   recover_spin <- 5
#   test[i] <- profit_sim[i]
# }
#
# if(recover_spin == 0)
# {
#   min_loss <- FALSE
# }
}
aux <- table(profit_sim)
hist(profit_sim)
summary(profit_sim)
table(ifelse(profit_sim > 0, 1, ifelse(profit_sim == 0, 0,-1)))/10000
rouleta <- data.frame(c(0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26),
c("Green",rep(c("Red","Black"),18)))
colnames(rouleta) <- c("Actual","Color")
sitting <- function(playlimit) ## strategy
{
betsize <- 1
profit <- 0
n_spin <- 0
while(profit < 1)
{
outcome <- sample(1:37,1,replace = TRUE)
number <- as.integer(rouleta$Actual[outcome])
color <- toString(rouleta$Color[outcome])
if(color == "Red")
{
profit <- profit + betsize
if(profit < 1)
{
betsize <- ifelse(profit + betsize + 1 > 1, 1 - profit, betsize + 1)
}
}
else
{
profit <- profit - betsize
#betsize <- betsize + 1
}
n_spin <- n_spin + 1
if((n_spin >= playlimit)||(profit <= -10)||(profit == 0)) ## If the number of spins is greater than your limit break and accept your loss. If profit is 0 reset the round as this can mean you just sat down to start playing
{
return(profit)
}
}
return(profit)
}
n_sim <- 1000000
profit_sim <- rep(NA,n_sim)
# min_loss <- FALSE
# recover_spin <- 0
# test <- rep(NA,n_sim)
for(i in 1:n_sim)
{
profit_sim[i]<- sitting(25)
# if(min_loss && recover_spin > 0)
# {
#   recover_spin <- recover_spin - 1
#   test[i] <- profit_sim[i]
# }
#
# if(profit_sim[i] <= -20)
# {
#   min_loss <- TRUE
#   recover_spin <- 5
#   test[i] <- profit_sim[i]
# }
#
# if(recover_spin == 0)
# {
#   min_loss <- FALSE
# }
}
aux <- table(profit_sim)
hist(profit_sim)
summary(profit_sim)
table(ifelse(profit_sim > 0, 1, ifelse(profit_sim == 0, 0,-1)))/10000
rouleta <- data.frame(c(0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26),
c("Green",rep(c("Red","Black"),18)))
colnames(rouleta) <- c("Actual","Color")
sitting <- function(playlimit) ## strategy
{
betsize <- 1
profit <- 0
n_spin <- 0
while(profit < 1)
{
outcome <- sample(1:37,1,replace = TRUE)
number <- as.integer(rouleta$Actual[outcome])
color <- toString(rouleta$Color[outcome])
if(color == "Red")
{
profit <- profit + betsize
if(profit < 1)
{
betsize <- ifelse(profit + betsize + 1 > 1, 1 - profit, betsize + 1)
}
}
else
{
profit <- profit - betsize
#betsize <- betsize + 1
}
n_spin <- n_spin + 1
if((n_spin >= playlimit)||(profit <= -15)||(profit == 0)) ## If the number of spins is greater than your limit break and accept your loss. If profit is 0 reset the round as this can mean you just sat down to start playing
{
return(profit)
}
}
return(profit)
}
n_sim <- 1000000
profit_sim <- rep(NA,n_sim)
# min_loss <- FALSE
# recover_spin <- 0
# test <- rep(NA,n_sim)
for(i in 1:n_sim)
{
profit_sim[i]<- sitting(25)
# if(min_loss && recover_spin > 0)
# {
#   recover_spin <- recover_spin - 1
#   test[i] <- profit_sim[i]
# }
#
# if(profit_sim[i] <= -20)
# {
#   min_loss <- TRUE
#   recover_spin <- 5
#   test[i] <- profit_sim[i]
# }
#
# if(recover_spin == 0)
# {
#   min_loss <- FALSE
# }
}
aux <- table(profit_sim)
hist(profit_sim)
summary(profit_sim)
table(ifelse(profit_sim > 0, 1, ifelse(profit_sim == 0, 0,-1)))/10000
rouleta <- data.frame(c(0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26),
c("Green",rep(c("Red","Black"),18)))
colnames(rouleta) <- c("Actual","Color")
sitting <- function(playlimit) ## strategy
{
betsize <- 1
profit <- 0
n_spin <- 0
while(profit < 1)
{
outcome <- sample(1:37,1,replace = TRUE)
number <- as.integer(rouleta$Actual[outcome])
color <- toString(rouleta$Color[outcome])
if(color == "Red")
{
profit <- profit + betsize
if(profit < 1)
{
betsize <- ifelse(profit + betsize + 1 > 1, 1 - profit, betsize + 1)
}
}
else
{
profit <- profit - betsize
#betsize <- betsize + 1
}
n_spin <- n_spin + 1
if((n_spin >= playlimit)||(profit <= -20)||(profit == 0)) ## If the number of spins is greater than your limit break and accept your loss. If profit is 0 reset the round as this can mean you just sat down to start playing
{
return(profit)
}
}
return(profit)
}
n_sim <- 1000000
profit_sim <- rep(NA,n_sim)
# min_loss <- FALSE
# recover_spin <- 0
# test <- rep(NA,n_sim)
for(i in 1:n_sim)
{
profit_sim[i]<- sitting(25)
# if(min_loss && recover_spin > 0)
# {
#   recover_spin <- recover_spin - 1
#   test[i] <- profit_sim[i]
# }
#
# if(profit_sim[i] <= -20)
# {
#   min_loss <- TRUE
#   recover_spin <- 5
#   test[i] <- profit_sim[i]
# }
#
# if(recover_spin == 0)
# {
#   min_loss <- FALSE
# }
}
aux <- table(profit_sim)
hist(profit_sim)
summary(profit_sim)
table(ifelse(profit_sim > 0, 1, ifelse(profit_sim == 0, 0,-1)))/10000
rouleta <- data.frame(c(0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26),
c("Green",rep(c("Red","Black"),18)))
colnames(rouleta) <- c("Actual","Color")
sitting <- function(playlimit) ## strategy
{
betsize <- 1
profit <- 0
n_spin <- 0
while(profit < 1)
{
outcome <- sample(1:37,1,replace = TRUE)
number <- as.integer(rouleta$Actual[outcome])
color <- toString(rouleta$Color[outcome])
if(color == "Red")
{
profit <- profit + betsize
if(profit < 1)
{
betsize <- ifelse(profit + betsize + 1 > 1, 1 - profit, betsize + 1)
}
}
else
{
profit <- profit - betsize
#betsize <- betsize + 1
}
n_spin <- n_spin + 1
if((n_spin >= playlimit)||(profit <= -25)||(profit == 0)) ## If the number of spins is greater than your limit break and accept your loss. If profit is 0 reset the round as this can mean you just sat down to start playing
{
return(profit)
}
}
return(profit)
}
n_sim <- 1000000
profit_sim <- rep(NA,n_sim)
# min_loss <- FALSE
# recover_spin <- 0
# test <- rep(NA,n_sim)
for(i in 1:n_sim)
{
profit_sim[i]<- sitting(25)
# if(min_loss && recover_spin > 0)
# {
#   recover_spin <- recover_spin - 1
#   test[i] <- profit_sim[i]
# }
#
# if(profit_sim[i] <= -20)
# {
#   min_loss <- TRUE
#   recover_spin <- 5
#   test[i] <- profit_sim[i]
# }
#
# if(recover_spin == 0)
# {
#   min_loss <- FALSE
# }
}
aux <- table(profit_sim)
hist(profit_sim)
summary(profit_sim)
table(ifelse(profit_sim > 0, 1, ifelse(profit_sim == 0, 0,-1)))/10000
rouleta <- data.frame(c(0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26),
c("Green",rep(c("Red","Black"),18)))
colnames(rouleta) <- c("Actual","Color")
sitting <- function(playlimit) ## strategy
{
betsize <- 1
profit <- 0
n_spin <- 0
while(profit < 1)
{
outcome <- sample(1:37,1,replace = TRUE)
number <- as.integer(rouleta$Actual[outcome])
color <- toString(rouleta$Color[outcome])
if(color == "Red")
{
profit <- profit + betsize
if(profit < 1)
{
betsize <- ifelse(profit + betsize + 1 > 1, 1 - profit, betsize + 1)
}
}
else
{
profit <- profit - betsize
betsize <- betsize + 1
}
n_spin <- n_spin + 1
if((n_spin >= playlimit)||(profit <= -25)||(profit == 0)) ## If the number of spins is greater than your limit break and accept your loss. If profit is 0 reset the round as this can mean you just sat down to start playing
{
return(profit)
}
}
return(profit)
}
n_sim <- 1000000
profit_sim <- rep(NA,n_sim)
# min_loss <- FALSE
# recover_spin <- 0
# test <- rep(NA,n_sim)
for(i in 1:n_sim)
{
profit_sim[i]<- sitting(25)
# if(min_loss && recover_spin > 0)
# {
#   recover_spin <- recover_spin - 1
#   test[i] <- profit_sim[i]
# }
#
# if(profit_sim[i] <= -20)
# {
#   min_loss <- TRUE
#   recover_spin <- 5
#   test[i] <- profit_sim[i]
# }
#
# if(recover_spin == 0)
# {
#   min_loss <- FALSE
# }
}
aux <- table(profit_sim)
hist(profit_sim)
summary(profit_sim)
table(ifelse(profit_sim > 0, 1, ifelse(profit_sim == 0, 0,-1)))/10000
